---
apiVersion: v1
kind: Namespace
metadata:
  name: kibana-ns
---
apiVersion: v1
kind: Namespace
metadata:
  name: elasticsearch-ns
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: elasticsearch-association
rules:
- apiGroups:
  - elasticsearch.k8s.elastic.co
  resources:
  - elasticsearches
# It is also possible to do some fine grain filtering with some per cluster roles
#  resourceNames:
#  - elasticsearch-sample
#  - an-other-elasticsearch-cluster
  verbs:
  - get
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kibana-user
  namespace: kibana-ns
---
# This RoleBinding give the permission to Kibana to access the Elasticsearch cluster
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: allow-kibana-from-remote-namespace
  namespace: elasticsearch-ns
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: elasticsearch-association
subjects:
  - kind: ServiceAccount
    name: kibana-user
    namespace: kibana-ns
---
apiVersion: elasticsearch.k8s.elastic.co/v1
kind: Elasticsearch
metadata:
  name: elasticsearch-sample
  namespace: elasticsearch-ns
spec:
  version: 7.5.2
  nodeSets:
    - name: default
      count: 1
      config:
        node.store.allow_mmap: false
---
apiVersion: kibana.k8s.elastic.co/v1
kind: Kibana
metadata:
  name: kibana-sample
  namespace: kibana-ns
spec:
  version: 7.5.2
  count: 1
  elasticsearchRef:
    name: "elasticsearch-sample"
    namespace: "elasticsearch-ns"
  # Service account used by Kibana to access Elasticsearch. The check is actually delegated to the API server.
  serviceAccountName: kibana-user