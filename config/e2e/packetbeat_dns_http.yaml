---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: packetbeat
  namespace: {{ .E2ENamespace }}
  labels:
    k8s-app: packetbeat
---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: elastic-packetbeat-restricted
  namespace: {{ .E2ENamespace }}
  labels:
    test-run: {{ .TestRun }}
rules:
  - apiGroups:
      - policy
    resources:
      - podsecuritypolicies
    resourceNames:
      - elastic.packetbeat.restricted
    verbs:
      - use
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: elastic-packetbeat-restricted-binding
  namespace: {{ .E2ENamespace }}
  labels:
    test-run: {{ .TestRun }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: elastic-packetbeat-restricted
subjects:
  - kind: ServiceAccount
    name: packetbeat
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: packetbeat-daemonset-config
  namespace: {{ .E2ENamespace }}
  labels:
    k8s-app: packetbeat
data:
  packetbeat.yml: |-
    packetbeat.interfaces.device: any
    packetbeat.protocols:
    - type: dns
      ports: [53]
      include_authorities: true
      include_additionals: true
    - type: http
      ports: [80, 8000, 8080, 9200]
    packetbeat.flows:
      timeout: 30s
      period: 10s
    processors:
    - add_cloud_metadata: {}
    - add_host_metadata: {}

    output.elasticsearch:
      hosts: ['https://${ELASTICSEARCH_HOST}:${ELASTICSEARCH_PORT}']
      username: ${ELASTICSEARCH_USERNAME}
      password: ${ELASTICSEARCH_PASSWORD}
      ssl.certificate_authorities:
      - /mnt/elastic/monitoring-ca.crt
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: packetbeat
  namespace: {{ .E2ENamespace }}
  labels:
    k8s-app: packetbeat
spec:
  selector:
    matchLabels:
      k8s-app: packetbeat
  template:
    metadata:
      labels:
        k8s-app: packetbeat
    spec:
      serviceAccountName: packetbeat
      terminationGracePeriodSeconds: 30
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      containers:
        - name: packetbeat
          image: docker.elastic.co/beats/packetbeat:7.8.1
          args: [
              "-c", "/etc/packetbeat.yml",
              "-e",
              "-d", "autodiscover",
              "-d", "kubernetes",
          ]
          env:
            - name: ELASTICSEARCH_HOST
              valueFrom:
                secretKeyRef:
                  name: "eck-{{ .TestRun }}"
                  key: monitoring_ip
            - name: ELASTICSEARCH_PORT
              value: "9200"
            - name: ELASTICSEARCH_USERNAME
              valueFrom:
                secretKeyRef:
                  name: "eck-{{ .TestRun }}"
                  key: monitoring_user
            - name: ELASTICSEARCH_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: "eck-{{ .TestRun }}"
                  key: monitoring_pass
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          securityContext:
            runAsUser: 0
            privileged: true
            capabilities:
              add:
                - NET_ADMIN
          resources:
            limits:
              memory: 200Mi
            requests:
              cpu: 100m
              memory: 100Mi
          volumeMounts:
            - name: config
              mountPath: /etc/packetbeat.yml
              readOnly: true
              subPath: packetbeat.yml
            - name: monitoring-ca
              mountPath: /mnt/elastic/monitoring-ca.crt
              readOnly: true
              subPath: monitoring_ca
      volumes:
        - name: config
          configMap:
            defaultMode: 0600
            name: packetbeat-daemonset-config
        - name: monitoring-ca
          secret:
            secretName: "eck-{{ .TestRun }}"